@model GameStoreClient.Models.AddressViewModel
@{
    ViewBag.Title = "Address";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<div class="container mt-4" style="height:87vh;">
    <h2>Your address</h2>

    @using (Html.BeginForm("AddressFromOrder", "Auth", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model != null)
                {
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @value = Model.Country } })
                }
                else
                {
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                }
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model != null)
                {
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @value = Model.City } })
                }
                else
                {
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                }

                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (Model != null)
                {
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @value = Model.Street } })
                }
                else
                {
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                }
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (Model != null)
                {
                    @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control", @value = Model.Building, @min = 1 } })
                }
                else
                {
                    @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control", @min = 1 } })
                }

                @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary bg-warning" />
            </div>
        </div>
    }
</div>